@import "../theme";

.myprofile {
  &.container {
    color: $our_brown;
    margin-top: 2em;
    min-height: 300px;
    /* we include the center mixin defined in _theme.scss and save three duplicate lines :) */
    @include center;
    flex-direction: column;
  }
  &.form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    max-width: 30em;
    height: 28em;
    font-size: 16px;
    font-weight: 300;
    padding-left: 37px;
    padding-right: 37px;
    border-radius: 0.75em;
    background-color: $our_green;
    transition: opacity 0.5s ease, transform 0.5s ease;
    box-shadow: $dropShadow;
  }
  &.field {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  &.input {
    height: 35px;
    width: 410px;
    padding-left: 15px;
    margin-left: -4px;
    border: none;
    border-radius: 0.75em;
    margin-bottom: 20px;
    background: transparentize(white, 0.85);
    color: $our_brown;
  }
  &.label {
    color: $our_brown;
    margin-bottom: 6px;
    text-transform: uppercase;
    font-weight: 600;
  }
  &.button-container {
    display: flex;
    justify-content: center;
    //margin-top: 2em;
    button {
      color: $our_beige;
      background-color: $our_brown;
    }
  }

  &.autocomplete-container {
      margin-bottom: 20px;
      position: absolute;
      border: 1px solid rgba(0, 0, 0, 0.1);
      box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);
      border-top: none;
      background-color: #fff;
      z-index: 99;
      top: calc(100% + 2px);
      left: 0;
      right: 0;
        }

   &.input-container {
      display: flex;
      position: relative;
      align-items: center;
      width: auto;
      flex-direction: row;
      flex-wrap: wrap;
    }

   // This component puts the field where users type in together with the clear button
   &.input-composed{
     display: flex;
     flex-direction: row;
   }

   &.input-container input {
      outline: none;
      padding: 10px;
      padding-right: 31px;
      font-size: 16px;
      flex: 0 0 calc(100%);
    }
    /* Adjust width to 95% when the input field is not empty */
    .input-container input:not(:placeholder-shown) {
      flex: 0 0 95%;
    }
    div.autocomplete-items {
      padding: 10px;
      cursor: pointer;
      background: $our_beige;
      color: $our_brown;
      width: 378px;
      max-height: 800px;
    }
    &.autocomplete-items {
      position: absolute;
      max-height: 200px;
      z-index: 1;
      overflow-y: auto;
      top: calc(70%);
    }

    &.autocomplete-items div:hover {
      /*when hovering an item:*/
      background-color: $our_brown;
      color: $our_beige;
    }
   &.autocomplete-items .autocomplete-active {
      /*when navigating through the items using the arrow keys:*/
      background-color: rgba(0, 0, 0, 0.1);
    }
    &.clear-button {
      color: $our_brown;
      cursor: pointer;
      position: absolute;
      right: 0px;
      height: 100%;
      display: none;
      align-items: center;
    }

    &.clear-button.visible {
      display: flex;
    }

    &.clear-button:hover {
      color: rgba(0, 0, 0, 0.6);
    }
}